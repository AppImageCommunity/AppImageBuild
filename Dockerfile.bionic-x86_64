FROM ubuntu:bionic

ENV ARCH=x86_64 DIST=bionic

# inherited by build scripts
ARG VERBOSE=0

COPY /entrypoint-ubuntu.sh /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
SHELL ["/entrypoint.sh", "bash", "-c"]

COPY ./install-deps-ubuntu.sh /
RUN bash -x /install-deps-ubuntu.sh

COPY ./install-cmake.sh /
RUN bash -x /install-cmake.sh

ARG MESON_VERSION=0.63.0
RUN python3 -m pip install meson=="$MESON_VERSION"

ARG DESKTOP_FILE_UTILS_VERSION=56d220dd679c7c3a8f995a41a27a7d6f3df49dea
COPY build-desktop-file-utils.sh /
RUN bash -x /build-desktop-file-utils.sh

ARG AUTOMAKE_VERSION=1.16.5
COPY build-automake.sh /
RUN bash -x /build-automake.sh

ARG LIBGPG_ERROR_VERSION=1.45
COPY build-libgpg-error.sh /
RUN bash -x /build-libgpg-error.sh

ARG LIBASSUAN_VERSION=2.5.5
COPY build-libassuan.sh /
RUN bash -x /build-libassuan.sh

ARG LIBGCRYPT_VERSION=1.10.1
COPY build-libgcrypt.sh /
RUN bash -x /build-libgcrypt.sh

ARG LIBKSBA_VERSION=1.6.0
COPY build-libksba.sh /
RUN bash -x /build-libksba.sh

ARG NPTH_VERSION=1.6
COPY build-npth.sh /
RUN bash -x /build-npth.sh

ARG GNUPG_VERSION=2.3.7
COPY build-gnupg.sh /
RUN bash -x /build-gnupg.sh

ARG GPGME_VERSION=1.17.1
COPY build-gpgme.sh /
RUN bash -x /build-gpgme.sh

# create unprivileged user for non-build-script use of this image
# build-in-docker.sh will likely not use this one, as it enforces the caller's uid inside the container
RUN adduser --system --group build
USER build
